

* Minimum (Maximum) Path to Reach a Target Pattern( Given a target find minimum or maximum cost to reach that).

-Bottom Up

for (int i = 1; i <= target; ++i) {
   for (int j = 0; j < ways.size(); ++j) {
       if (ways[j] <= i) {
           dp[i] = min(dp[i], dp[i - ways[j]] + cost / path / sum) ;
       }
   }
}
 
return dp[target]
